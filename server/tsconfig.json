{
    "compilerOptions": {

        "target": "ES2020" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
        "lib": [
            "ES6"
        ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
        /* Modules */
        "module": "NodeNext" /* Specify what module code is generated. */,
        "rootDir": "./src" /* Specify the root folder within your source files. */,
        "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */
        "baseUrl": ".",                                  /* Specify the base directory to resolve non-relative module names. */
        "paths": {
            "*": ["./src/*"]
        },                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
        "typeRoots": [
            "./node_modules/@types",
            "./src/types"
        ] /* Specify multiple folders that act like './node_modules/@types'. */,
        "types": [
            "node"
        ] /* Specify type package names to be included without being referenced in a source file. */,
        "resolveJsonModule": true /* Enable importing .json files. */,
        "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
        "sourceMap": true /* Create source map files for emitted JavaScript files. */,
        "removeComments": true /* Disable emitting comments. */,
        "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
        "skipLibCheck": true /* Skip type checking all .d.ts files. */
    },
    "include": ["src/**/*"],
    "exclude": ["node_modules"],
    "lib": ["esnext"],
    "ts-node": {
        "esm": true
    },
}
